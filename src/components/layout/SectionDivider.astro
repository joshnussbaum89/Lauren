---
export interface Props {
  title: string
  theme?: 'green' | 'pink' | 'blue' | 'purple'
  imageUrl: string
  isArrow?: boolean
  description?: string
}

const { title, theme, imageUrl, isArrow, description } = Astro.props
---

<div
  id={title.toLowerCase()}
  class:list={[
    'divider',
    {
      arrow: isArrow,
      green: theme === 'green',
      pink: theme === 'pink',
      blue: theme === 'blue',
      purple: theme === 'purple',
    },
  ]}
  style={`background-image: url(${imageUrl});`}
>
  <div class="scrim"></div>
  <h2>{title}</h2>
  {description && <p>{description}</p>}
</div>

<style>
  .divider {
    scroll-margin-top: 112px;
    position: relative;
    z-index: -1;
    min-height: 50vh;
    background-size: cover;
    background-attachment: fixed;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: var(--color-white);
  }

  @media only screen and (max-device-width: 1366px) {
    .divider {
      background-attachment: scroll;
    }
  }

  .arrow {
    clip-path: polygon(0 0, 100% 0, 100% 80%, 50% 100%, 0 80%);
  }

  .scrim {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: var(--color-black);
    opacity: 0.3; 
  }

  h2 {
    text-shadow: 2px 2px 0 var(--color-black);
  }

  .green h2 {
    text-shadow: 2px 2px 0 var(--color-light-green);
  }

  .pink h2 {
    text-shadow: 2px 2px 0 var(--color-light-pink);
  }

  .blue h2 {
    text-shadow: 2px 2px 0 var(--color-blue);
  }

  .purple h2 {
    text-shadow: 2px 2px 0 var(--color-purple);
  }

  p {
    max-width: 700px;
    padding: 1rem;
    font-size: var(--size-md);
    line-height: 1.8;
    text-align: center;
    text-shadow: 1px 1px 0 var(--color-black);
  }

  @media (min-width: 768px) {
    p {
      font-size: var(--size-lg);
      line-height: 2;
    }
  }
</style>
